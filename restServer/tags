!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
LAZY_LISTENER_H	LazyListener.h	2;"	d
LazyListener	LazyListener.cpp	/^LazyListener::LazyListener(utility::string_t url) : m_listener(url)$/;"	f	class:LazyListener
LazyListener	LazyListener.h	/^class LazyListener$/;"	c
close	LazyListener.h	/^    pplx::task<void>close(){return m_listener.close();}$/;"	f	class:LazyListener
handle_delete	LazyListener.cpp	/^void LazyListener::handle_delete(http_request message)$/;"	f	class:LazyListener
handle_get	LazyListener.cpp	/^void LazyListener::handle_get(http_request message)$/;"	f	class:LazyListener
handle_post	LazyListener.cpp	/^void LazyListener::handle_post(http_request message)$/;"	f	class:LazyListener
handle_put	LazyListener.cpp	/^void LazyListener::handle_put(http_request message)$/;"	f	class:LazyListener
m_listener	LazyListener.h	/^   	http_listener m_listener;$/;"	m	class:LazyListener
main	LazyMain.cpp	/^int main(void)$/;"	f
main	cpprest.cpp	/^int main(void)$/;"	f
open	LazyListener.h	/^    pplx::task<void>open(){return m_listener.open();}$/;"	f	class:LazyListener
